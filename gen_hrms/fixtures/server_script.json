[
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-10 16:07:09.232026",
  "module": "Gen Hrms",
  "name": "Send Salary Slip",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Salary Slip",
  "script": "# Server Script for Salary Slip - After Submit\n# This script will run after a Salary Slip is submitted\n# It sends the salary slip as an email attachment to the employee\n\n# Check if email has already been sent\nif doc.get(\"email_sent\"):\n    frappe.msgprint(\"Email already sent for this salary slip\")\nelse:\n    # Get employee email address - check multiple possible fields\n    employee_email = None\n    \n    # First try the salary slip document\n    if doc.get(\"email_id\"):\n        employee_email = doc.email_id\n    \n    # If not found, try the employee record\n    if not employee_email:\n        employee_email = frappe.db.get_value(\"Employee\", doc.employee, \"prefered_email\")\n    \n    # If still not found, try company_email or personal_email\n    if not employee_email:\n        employee_email = frappe.db.get_value(\"Employee\", doc.employee, \"company_email\")\n    \n    if not employee_email:\n        employee_email = frappe.db.get_value(\"Employee\", doc.employee, \"personal_email\")\n    \n    # Final fallback - check user account linked to employee\n    if not employee_email:\n        user_id = frappe.db.get_value(\"Employee\", doc.employee, \"user_id\")\n        if user_id:\n            employee_email = frappe.db.get_value(\"User\", user_id, \"email\")\n    \n    if not employee_email:\n        frappe.msgprint(f\"{doc.employee_name}: Employee email not found, hence email not sent\")\n        # Exit early if no email found by not executing the rest of the code\n    else:\n        # Get month and year values properly\n        month = doc.get(\"month\") or frappe.utils.format_date(doc.start_date, \"MMMM\")\n        fiscal_year = doc.get(\"fiscal_year\") or doc.get(\"fiscal_year\")\n        \n        # If still not available, get from posting date\n        if not fiscal_year and doc.get(\"posting_date\"):\n            fiscal_year = frappe.utils.getdate(doc.posting_date).year\n        \n        # Create email subject and message with proper formatting\n        subject = f\"Your Salary Slip - {month} {fiscal_year}\"\n        message = f\"\"\"\n<div style=\"font-family: Arial, sans-serif; line-height: 1.6;\">\n    <p>Dear <strong>{doc.employee_name}</strong>,</p>\n    \n    <p>Please find attached your salary slip for <strong>{month} {fiscal_year}</strong>.</p>\n    \n    <p>If you have any questions, please contact the HR department.</p>\n    \n    <p>Best regards,<br>\n    <strong>HR Department</strong><br>\n    {doc.company}</p>\n</div>\n\"\"\"\n        \n        try:\n            # Check if email settings are configured\n            email_settings = frappe.db.get_value(\"Email Account\", {\"default_outgoing\": 1}, \n                                               [\"email_id\", \"smtp_server\"], as_dict=1)\n            if not email_settings:\n                frappe.throw(\"Email not configured. Please setup Email Account first.\")\n            \n            # Get the PDF content\n            pdf_content = frappe.get_print(doc.doctype, doc.name, print_format=\"Gennext IT Salary Slip\", as_pdf=True)\n            \n            # Create email with attachment\n            frappe.sendmail(\n                recipients=[employee_email],\n                subject=subject,\n                message=message,\n                reference_doctype=doc.doctype,\n                reference_name=doc.name,\n                attachments=[{\n                    \"fname\": f\"Salary_Slip_{doc.employee_name}_{month}_{fiscal_year}.pdf\",\n                    \"fcontent\": pdf_content\n                }],\n                delayed=False,  # Send immediately\n                now=True       # Send immediately without queue\n            )\n            \n            # Update the salary slip to mark as emailed\n            frappe.db.set_value(doc.doctype, doc.name, {\n                \"custom_email_sent\": 1,\n                \"custom_email_sent_on\": frappe.utils.nowdate()\n            })\n            \n            frappe.msgprint(f\"Salary slip emailed successfully to {employee_email}\")\n            \n        except Exception as e:\n            frappe.log_error(f\"Failed to send salary slip {doc.name}: {str(e)}\", \"Salary Slip Email Error\")\n            frappe.msgprint(f\"Failed to send email: {str(e)}\")",
  "script_type": "DocType Event"
 }
]